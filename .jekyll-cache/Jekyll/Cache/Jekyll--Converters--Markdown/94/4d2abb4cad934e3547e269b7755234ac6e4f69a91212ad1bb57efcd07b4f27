I"p<h1 id="상태-코드">상태 코드</h1>
<p><em>클라이언트가 보낸 요청의 처리 상태를 응답에서 알려주는 기능</em>
*1xx (Informational) : 요청이 수신되어 처리중</p>
<ul>
  <li>2xx (Successful) : 요청 정상 처리
    <ul>
      <li>201 (Created) : 요청을 성공해서 새로운 리소스가 생성됨 (Location 헤더 필드로 식별)</li>
      <li>202 (Accepted) : 요청이 접수 되었으나 처리가 완료되지 않았음</li>
      <li>204 (No Content) : 서버가 요청을 성공적으로 수행했지만, 응답 페이로드 본문에 보낼 데이터가 없음
        <ul>
          <li>웹 문서 편집기에서 save 버튼</li>
          <li>save 버튼의 결과로 아무 내용이 없어도 된다.</li>
          <li>save 버튼을 눌러도 같은 화면을 유지해야 한다.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>3xx (Redirection) : 요청을 완료하려면 추가 행동이 필요.( 주로 웹브라우저의 추가 요청 필요)
    <ul>
      <li>영구 리다이렉션(301, 308)
        <ul>
          <li>리소스의 URI가 영구적으로 이동</li>
          <li>원래의 URL를 사용X, 검색 엔진 등에서도 변경 인지</li>
          <li>301 : 리다이렉트 요청 메서드가 GET으로 변하고, 본문이 제거 될 수 있음</li>
          <li>308 : 301 과 기능은 같지만, 리다이렉트 요청 메서드와 본문 유지(처음 POST로 보내면 리다이렉트도 POST)</li>
        </ul>
      </li>
      <li>일시적인 리다이렉션(302, 307, 303)
        <ul>
          <li>302 : 요청 메서드가 GET으로 변하고, 본문이 제거될 수 있음</li>
          <li>307 : 302와 기능 똑같음, 리다이렉트시 요청 메서드와 본문 유지</li>
          <li>303 : 302와 기능 똑같음, 리다이렉트 요청 메서드가 GET으로 변경</li>
          <li>PRG : Post / Redirect / Get  일시적인 리다이렉션
            <ul>
              <li>POST 로 주문후에 웹 브라우저를 새로고침하면?</li>
              <li>새로고침은 다시 요청</li>
              <li>중복 주문이 될 수 있다.</li>
            </ul>
          </li>
          <li>기타 리다이렉션(300, 304)
            <ul>
              <li>300 : Multiple Choices : 안쓴다</li>
              <li>304 : Not Modified
                <ul>
                  <li>캐시를 목적으로 사용</li>
                  <li>클라이언트에게 리소스가 수정되지 않았음을 알려준다. 따라서 클라이언트는 로컬 pc에 저장된 캐시를 재사용한다. (캐시로 리다이렉트 한다.)</li>
                  <li>304 응답은 응답에 메시지 바디를 포함하면 안된다. (로컬 캐시를 사용해야 하므로)</li>
                  <li>조건부 GET, HEAD 요청시 사용</li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>4xx (Client Error) : 클라이언트 오류, 잘못된 문법등으로 서버가 요청을 수행할 수 없음.
    <ul>
      <li>오류의 원인이 클라이언트에 있음</li>
      <li>중요! 클라이언트가 이미 잘못된 요청, 데이터를 보내고 있기 때문에, 똑같은 재시도가 실패함</li>
      <li>400(Bad Request) : 클라이언트가 잘못된 요청을 해서 서버가 요청을 처리할 수 없음
        <ul>
          <li>요청 구문, 메시지 등등 오류</li>
          <li>클라이언트는 요청 내용을 다시 검토하고, 보내야함</li>
        </ul>
      </li>
      <li>401(Unauthorized) : 클라이언트가 해당 리소스에 대한 인증이 필요함.
        <ul>
          <li>인증 되지 않음</li>
          <li>인증 : 본인이 누구인지 확인</li>
          <li>인가 : 권한부여(admin 권한처럼 특정 리로스에 접근할 수 있는 권한</li>
        </ul>
      </li>
      <li>403(Forbidden) : 서버가 요청을 이해했지만 승인을 거부함
        <ul>
          <li>주로 인증 자격 증명은 있지만, 접근 권한이 불충분한 경우</li>
        </ul>
      </li>
      <li>404(Not Found)
        <ul>
          <li>요청 리소스가 서버에 없음</li>
          <li>또는 클라이언트가 권한이 부족한 리소스에 대한 접근할 때 해당 리소스를 숨기고 싶을때</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>
:ET