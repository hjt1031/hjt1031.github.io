I"yN<h1 id="포인터-연산-사용하기">포인터 연산 사용하기</h1>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">struct</span> <span class="n">Data</span> <span class="p">{</span>
	<span class="kt">int</span> <span class="n">num1</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">num2</span><span class="p">;</span>
<span class="p">};</span>
<span class="kt">int</span> <span class="nf">main40</span><span class="p">()</span> <span class="p">{</span>
	<span class="c1">//포인터 연산으로 메모리 주소 조작하기</span>
	<span class="kt">int</span> <span class="n">numArr</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">11</span><span class="p">,</span><span class="mi">22</span><span class="p">,</span><span class="mi">33</span><span class="p">,</span><span class="mi">44</span><span class="p">,</span><span class="mi">55</span> <span class="p">};</span>
	<span class="kt">int</span><span class="o">*</span> <span class="n">numPtrA</span><span class="p">;</span>
	<span class="kt">int</span><span class="o">*</span> <span class="n">numPtrB</span><span class="p">;</span>
	<span class="kt">int</span><span class="o">*</span> <span class="n">numPtrC</span><span class="p">;</span>

	<span class="n">numPtrA</span> <span class="o">=</span> <span class="n">numArr</span><span class="p">;</span>

	<span class="n">numPtrB</span> <span class="o">=</span> <span class="n">numPtrA</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
	<span class="n">numPtrC</span> <span class="o">=</span> <span class="n">numPtrA</span> <span class="o">+</span> <span class="mi">2</span><span class="p">;</span>

	<span class="n">printf</span><span class="p">(</span><span class="s">"%p</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">numPtrA</span><span class="p">);</span> <span class="c1">//00D8FDB0</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%p</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">numPtrB</span><span class="p">);</span> <span class="c1">//00D8FDB4 (22가 있는 곳)</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%p</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">numPtrC</span><span class="p">);</span> <span class="c1">//00D8FDB8 4바이트 만큼 2번  순방향으로 이동 (33이있는 곳)</span>

	<span class="n">numPtrA</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">numArr</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>

	<span class="n">numPtrB</span> <span class="o">=</span> <span class="n">numPtrA</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
	<span class="n">numPtrC</span> <span class="o">=</span> <span class="n">numPtrA</span> <span class="o">-</span> <span class="mi">2</span><span class="p">;</span>

	<span class="n">printf</span><span class="p">(</span><span class="s">"%p</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">numPtrA</span><span class="p">);</span> <span class="c1">//0076F858</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%p</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">numPtrB</span><span class="p">);</span> <span class="c1">//0076F854</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%p</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">numPtrC</span><span class="p">);</span> <span class="c1">//0076F850</span>

	<span class="c1">//포인터 연산과 역참조 사용하기</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="o">*</span><span class="n">numPtrB</span><span class="p">);</span> <span class="c1">// 22</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="o">*</span><span class="n">numPtrC</span><span class="p">);</span> <span class="c1">// 11</span>

	<span class="n">printf</span><span class="p">(</span><span class="s">"%d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="o">*</span><span class="p">(</span><span class="n">numPtrB</span><span class="o">+</span><span class="mi">1</span><span class="p">));</span> <span class="c1">// 22</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="o">*</span><span class="n">numPtrC</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span> <span class="c1">// 12</span>

	<span class="c1">//void 포인터로 포인터 연산하기</span>
	<span class="kt">void</span><span class="o">*</span> <span class="n">ptr</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span>

	<span class="n">printf</span><span class="p">(</span><span class="s">"%p"</span><span class="p">,</span> <span class="n">ptr</span><span class="p">);</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%p"</span><span class="p">,</span> <span class="p">(</span><span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="n">ptr</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">//9424</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%p"</span><span class="p">,</span> <span class="p">(</span><span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="n">ptr</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">//941C</span>

	<span class="kt">void</span><span class="o">*</span> <span class="n">ptr2</span> <span class="o">=</span> <span class="n">ptr</span><span class="p">;</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%p"</span><span class="p">,</span> <span class="o">++</span><span class="p">(</span><span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="n">ptr2</span><span class="p">);</span> <span class="c1">//9424</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%p"</span><span class="p">,</span> <span class="o">--</span><span class="p">(</span><span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="n">ptr2</span><span class="p">);</span> <span class="c1">//9420</span>
	 
	<span class="n">printf</span><span class="p">(</span><span class="s">"%p"</span><span class="p">,</span> <span class="p">((</span><span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="n">ptr2</span><span class="p">)</span><span class="o">++</span><span class="p">);</span> <span class="c1">//9420</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%p"</span><span class="p">,</span> <span class="p">((</span><span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="n">ptr2</span><span class="p">)</span><span class="o">--</span><span class="p">);</span> <span class="c1">//9424</span>
	<span class="n">free</span><span class="p">(</span><span class="n">ptr</span><span class="p">);</span>

	<span class="c1">//구조체 포인터로 포인터 연산하기</span>
	<span class="k">struct</span> <span class="n">Data</span> <span class="n">d</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span> <span class="p">{</span><span class="mi">10</span><span class="p">,</span><span class="mi">20</span><span class="p">},{</span><span class="mi">30</span><span class="p">,</span><span class="mi">40</span><span class="p">},{</span><span class="mi">50</span><span class="p">,</span><span class="mi">60</span><span class="p">}</span> <span class="p">};</span>
	<span class="k">struct</span> <span class="n">Data</span><span class="o">*</span> <span class="n">ptr</span><span class="p">;</span>

	<span class="n">ptr</span> <span class="o">=</span> <span class="n">d</span><span class="p">;</span>

	<span class="n">printf</span><span class="p">(</span><span class="s">"%d %d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="p">(</span><span class="n">ptr</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">num1</span><span class="p">,</span> <span class="p">(</span><span class="n">ptr</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">num2</span><span class="p">);</span><span class="c1">// 30, 40</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%d %d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="p">(</span><span class="n">ptr</span> <span class="o">+</span> <span class="mi">2</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">num1</span><span class="p">,</span> <span class="p">(</span><span class="n">ptr</span> <span class="o">+</span> <span class="mi">2</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">num2</span><span class="p">);</span><span class="c1">// 50 ,60</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="hello-world-출력함수-만들기">hello world 출력함수 만들기</h1>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">hello</span><span class="p">();</span> <span class="c1">//함수 가 있다고 정의를 해줘야 에러가 나지 않음</span>
<span class="kt">int</span> <span class="nf">main41</span><span class="p">()</span> <span class="p">{</span>
	<span class="n">hello</span><span class="p">();</span>
	<span class="c1">//hello 함수를 main 함수 밑에 사용하면 에러 발생 c언어 컴파일은 위에서부터 아래로 컴파일 하기 떄문</span>
	<span class="c1">//그래서 함수 선언을 해야함</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">hello</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"Hello world"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="함수에서-반환값-사용하기">함수에서 반환값 사용하기</h1>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">one</span><span class="p">()</span> <span class="p">{</span>
	<span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">float</span> <span class="nf">realNumber</span><span class="p">()</span> <span class="p">{</span>
	<span class="k">return</span> <span class="mi">1</span><span class="p">.</span><span class="mi">234567</span><span class="n">f</span><span class="p">;</span>
<span class="p">}</span>
<span class="n">bool</span> <span class="nf">truth</span><span class="p">()</span> <span class="p">{</span>
	<span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">int</span><span class="o">*</span> <span class="nf">ten</span><span class="p">()</span>
<span class="p">{</span>
	<span class="kt">int</span> <span class="n">num1</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>

	<span class="k">return</span> <span class="o">&amp;</span><span class="n">num1</span><span class="p">;</span> <span class="c1">//잘못 된 방법 malloc 함수를 사용해야함.</span>

	<span class="kt">int</span><span class="o">*</span> <span class="n">numPtr</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>

	<span class="o">*</span><span class="n">numPtr</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>

	<span class="k">return</span> <span class="n">numPtr</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span><span class="o">*</span> <span class="nf">allocMemory</span><span class="p">()</span>
<span class="p">{</span>
	<span class="kt">void</span><span class="o">*</span> <span class="n">ptr</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span>

	<span class="k">return</span> <span class="n">ptr</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">struct</span> <span class="n">Person</span> <span class="p">{</span>
	<span class="kt">char</span> <span class="n">name</span><span class="p">[</span><span class="mi">20</span><span class="p">];</span>
	<span class="kt">int</span> <span class="n">age</span><span class="p">;</span>
	<span class="kt">char</span> <span class="n">address</span><span class="p">[</span><span class="mi">100</span><span class="p">];</span>
<span class="p">};</span>
<span class="k">struct</span> <span class="n">Person</span> <span class="nf">getPerson</span><span class="p">()</span> <span class="p">{</span>

	<span class="k">struct</span> <span class="n">Person</span> <span class="n">p</span><span class="p">;</span>

	<span class="n">strcpy</span><span class="p">(</span><span class="n">p</span><span class="p">.</span><span class="n">name</span><span class="p">,</span> <span class="s">"홍길동"</span><span class="p">);</span>
	<span class="n">p</span><span class="p">.</span><span class="n">age</span> <span class="o">=</span> <span class="mi">30</span><span class="p">;</span>
	<span class="n">strcpy</span><span class="p">(</span><span class="n">p</span><span class="p">.</span><span class="n">address</span><span class="p">,</span> <span class="s">"서울시 용산구 한남동"</span><span class="p">);</span>

	<span class="k">return</span> <span class="n">p</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">main42</span><span class="p">()</span> <span class="p">{</span>
	<span class="kt">int</span> <span class="n">num1</span><span class="p">;</span>

	<span class="n">num1</span> <span class="o">=</span> <span class="n">one</span><span class="p">();</span>

	<span class="n">printf</span><span class="p">(</span><span class="s">"%d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">num1</span><span class="p">);</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">one</span><span class="p">());</span> <span class="c1">//동일하다</span>

	<span class="kt">float</span> <span class="n">num1</span><span class="p">;</span>
	<span class="n">bool</span> <span class="n">b1</span><span class="p">;</span>

	<span class="n">num1</span> <span class="o">=</span> <span class="n">realNumber</span><span class="p">();</span>
	<span class="n">b1</span> <span class="o">=</span> <span class="n">truth</span><span class="p">();</span>

	<span class="n">printf</span><span class="p">(</span><span class="s">"%f</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">num1</span><span class="p">);</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">b1</span><span class="p">);</span>

	<span class="c1">//포인터 반환하기</span>
	<span class="kt">int</span><span class="o">*</span> <span class="n">numPtr</span><span class="p">;</span>

	<span class="n">numPtr</span> <span class="o">=</span> <span class="n">ten</span><span class="p">();</span>

	<span class="n">printf</span><span class="p">(</span><span class="s">"%d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="o">*</span><span class="n">numPtr</span><span class="p">);</span>

	<span class="n">free</span><span class="p">(</span><span class="n">numPtr</span><span class="p">);</span>

	<span class="c1">// void포인터 반환하기</span>
	<span class="kt">char</span><span class="o">*</span> <span class="n">s1</span> <span class="o">=</span> <span class="n">allocMemory</span><span class="p">();</span>
	<span class="n">strcpy</span><span class="p">(</span><span class="n">s1</span><span class="p">,</span> <span class="s">"Hello, world"</span><span class="p">);</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%s</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">s1</span><span class="p">);</span>
	<span class="n">free</span><span class="p">(</span><span class="n">s1</span><span class="p">);</span>

	<span class="kt">int</span><span class="o">*</span> <span class="n">numPtr1</span> <span class="o">=</span> <span class="n">allocMemory</span><span class="p">();</span>
	<span class="n">numPtr1</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
	<span class="n">numPtr1</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%d %d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">numPtr1</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">numPtr1</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span> <span class="c1">//10 ,20 출력</span>
	<span class="n">free</span><span class="p">(</span><span class="n">numPtr1</span><span class="p">);</span>

	<span class="c1">//구조체와 구조체 포인터 반환하기</span>
	<span class="k">struct</span> <span class="n">Person</span> <span class="n">p1</span><span class="p">;</span>

	<span class="n">p1</span> <span class="o">=</span> <span class="n">getPerson</span><span class="p">();</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"이름 : %s</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">p1</span><span class="p">.</span><span class="n">name</span><span class="p">);</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"나이 : %s</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">p1</span><span class="p">.</span><span class="n">age</span><span class="p">);</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"주소 : %s</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">p1</span><span class="p">.</span><span class="n">address</span><span class="p">);</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
:ET