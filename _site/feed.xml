<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-04-23T13:19:15+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">juntae</title><subtitle>JavaScript And Node.js</subtitle><author><name>동센</name></author><entry><title type="html">vkdjfl</title><link href="http://localhost:4000/" rel="alternate" type="text/html" title="vkdjfl" /><published>2020-04-23T00:00:00+09:00</published><updated>2020-04-23T00:00:00+09:00</updated><id>http://localhost:4000/</id><content type="html" xml:base="http://localhost:4000/">&lt;p&gt;vfxfgdfdggdffgdgdf&lt;/p&gt;</content><author><name>동센</name></author><summary type="html">vfxfgdfdggdffgdgdf</summary></entry><entry><title type="html">[얄코]Cookie, Session, Cache</title><link href="http://localhost:4000/cookie-session-cache/" rel="alternate" type="text/html" title="[얄코]Cookie, Session, Cache" /><published>2020-04-21T00:00:00+09:00</published><updated>2020-04-21T00:00:00+09:00</updated><id>http://localhost:4000/cookie-session-cache</id><content type="html" xml:base="http://localhost:4000/cookie-session-cache/">&lt;h1 id=&quot;쿠키-&quot;&gt;쿠키 :&lt;/h1&gt;
&lt;p&gt;브라우저에 저장되는 내용들  , 내컴퓨터에 있으닌깐 내가 갖고 있는 정보들 하지만 쿠키는 한계가 있다 내가임의로 고치거나 고칠 수 있고 남이 쉽게 볼 수 도있다.&lt;br /&gt;
( 로그인자동완성, 오늘 하루 안보기, 쇼핑을 하는데 로그인을 하지않고 물건을 장바구니에 담는 등 지워지거나, 조작되거나, 가로채거나 보여져도 큰 지장이없는 정보들을 브라우져에 저장하는데 사용됨)&lt;/p&gt;
&lt;h1 id=&quot;세션-&quot;&gt;세션 :&lt;/h1&gt;
&lt;p&gt;서버에서 사용자를 구분하기위한 기한이 짧은 임시 키 하나를 부라우저에 보내서 쿠키로 저장한다.&lt;br /&gt;
사용자가 어떤 사이트에 돌아다닐 때 이 사용자의 중요한 정보들은 서버의 메모리나 데이터베이스에 저장되는 것.&lt;br /&gt;
브라우저가 이 사이트의 페이지들에 접속할 때마다. http 요청에 이 키를 실어서 전송하고 서버는 그 키를 보고 ‘얘는 그 사용자구나’ 인식해서 이 사용자의 정보들을 가공해서 응답으로 보내준다.&lt;br /&gt;
ex) 네이버에 로그인 해서 다른페이지 를 이용할때마다 로그인을 안해도 되는 이유는 쿠키와 세션 조합으로 네이버서 네이버 서버가 인지하고 있다.&lt;br /&gt;
사용자나 다른 누군가에게 노출되어서는 안 되는, 서비스 제공자가 직접 관리해야 할 정보들은 세션으로 서버 안에서 다뤄짐&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;캐쉬-&quot;&gt;캐쉬 :&lt;/h1&gt;
&lt;p&gt;가져오는데 비용이 드는 데이터를 한 번 가져온 뒤에는 임시로 저장해두는것, 캐쉬는 이미지 같을걸 불러올때 데이터 사용량도 발생하고 시간도 들기 때문에 사용자가 여러 번 방문할 법한 사이트에서는 사용자의 컴퓨터 또는 중간 역할을 하는 서버에 저장해둔다.&lt;br /&gt;
ex) 손님이 신발을 사는데 손님이 사이즈를 갖다달라고 직원에게 요청한다. 직원은 창고에 손님 사이즈 신발을 가져온다. 손님은 매장을 한번 더 둘러보고 온다고 하지만 직원은 그 손님이 다시와서 살것같아서 창고에 넣어두지 않고 한편의 거치대에 넣어논다. (거치대 = 캐쉬)&lt;/p&gt;</content><author><name>동센</name></author><summary type="html">쿠키 : 브라우저에 저장되는 내용들 , 내컴퓨터에 있으닌깐 내가 갖고 있는 정보들 하지만 쿠키는 한계가 있다 내가임의로 고치거나 고칠 수 있고 남이 쉽게 볼 수 도있다. ( 로그인자동완성, 오늘 하루 안보기, 쇼핑을 하는데 로그인을 하지않고 물건을 장바구니에 담는 등 지워지거나, 조작되거나, 가로채거나 보여져도 큰 지장이없는 정보들을 브라우져에 저장하는데 사용됨) 세션 : 서버에서 사용자를 구분하기위한 기한이 짧은 임시 키 하나를 부라우저에 보내서 쿠키로 저장한다. 사용자가 어떤 사이트에 돌아다닐 때 이 사용자의 중요한 정보들은 서버의 메모리나 데이터베이스에 저장되는 것. 브라우저가 이 사이트의 페이지들에 접속할 때마다. http 요청에 이 키를 실어서 전송하고 서버는 그 키를 보고 ‘얘는 그 사용자구나’ 인식해서 이 사용자의 정보들을 가공해서 응답으로 보내준다. ex) 네이버에 로그인 해서 다른페이지 를 이용할때마다 로그인을 안해도 되는 이유는 쿠키와 세션 조합으로 네이버서 네이버 서버가 인지하고 있다. 사용자나 다른 누군가에게 노출되어서는 안 되는, 서비스 제공자가 직접 관리해야 할 정보들은 세션으로 서버 안에서 다뤄짐</summary></entry><entry><title type="html">[AWS] Scale Out</title><link href="http://localhost:4000/aws-scale-out/" rel="alternate" type="text/html" title="[AWS] Scale Out" /><published>2020-04-21T00:00:00+09:00</published><updated>2020-04-21T00:00:00+09:00</updated><id>http://localhost:4000/aws-scale-out</id><content type="html" xml:base="http://localhost:4000/aws-scale-out/">&lt;h1 id=&quot;여러대의-컴퓨터가-협력해서-어떤-동일한-목표를-달성하는-컴퓨터들의-사회를-만든다-라고-할-수-있다&quot;&gt;여러대의 컴퓨터가 협력해서 어떤 동일한 목표를 달성하는 컴퓨터들의 사회를 만든다 라고 할 수 있다.&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;처음에 Scale up 을 하다보면 단일 컴퓨팅으로써 한계에 도달하게 되는데 그 한계에 도달했을때 한계를 뛰어넘을 수 있는건 Scale out&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;데이터를 처리할떄 보통 web server - middle ware - database 순이다. &lt;br /&gt;
web server 대표적 으로 nginx, apache&lt;br /&gt;
middle ware 대표적 으로  php , java spring&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;만약,트래픽 이 몰린다면 CPU가 과부화가 걸려서 접속이 느려질 것이다. &lt;br /&gt;
그럴때 scale up을 사용해 database 를 한대더 인스턴스를 생성해준다. database.slave1(읽기), database.master1(쓰기) 로 정해놓는다.&lt;br /&gt;
예를들어 middle ware에서 database.slave1 에는 읽기만 database.master1 에는 쓰기만 역할을 지정해주고 더많을떄는 3개4개까지 만들어준다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;보통 database.slave을 먼저 샤딩해주고 그다음 database.master 을 샤딩해준다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그다음 middle ware 를 하나더 만들어주고 web server 를 만들어주는데 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;webserve 는 중요한게 사용자가 접속할때 ip에서 DNS서버를 통해 접속하는데  DNS에 설정을 변경해 
2명의 사용자가 접속할때 webserver1,webserver2 로 분할로 보내주는 개념이다.
보통 webserver 같은경우 앞에 loadbalancer 를 두고 사용을한다. &lt;br /&gt;
예를 들어 webserver1, webserver2, webserver3  총3대가 있으면  webserver2가 죽었으면 loadbalancer 가 감지해 webserver1,webserver3 으로만 타게 해준다.&lt;br /&gt;
그리고 webserver1이  webserver2,webserver3 에 비해 성능이 좋으면 loadbalancer 가 감지해 webserver1 에 많은 할당량을 배분한다.&lt;br /&gt;&lt;/p&gt;</content><author><name>동센</name></author><summary type="html">여러대의 컴퓨터가 협력해서 어떤 동일한 목표를 달성하는 컴퓨터들의 사회를 만든다 라고 할 수 있다.</summary></entry><entry><title type="html">[nodejs] web server, 변수, Template literals,URL</title><link href="http://localhost:4000/nodejs-web-server/" rel="alternate" type="text/html" title="[nodejs] web server, 변수, Template literals,URL" /><published>2020-04-20T00:00:00+09:00</published><updated>2020-04-20T00:00:00+09:00</updated><id>http://localhost:4000/nodejs-web-server</id><content type="html" xml:base="http://localhost:4000/nodejs-web-server/">&lt;p&gt;web browser 가 web server 한테 정보를 요청하면 web server 그정보를 찾아서 web browser에게 응답해준다.&lt;/p&gt;

&lt;h1 id=&quot;datatype&quot;&gt;&lt;strong&gt;DataType&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;String&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;asdjlkasdvnlkfnvljkfndjlvndfljvnjldfvdf.length) // 갯수를 확인 할 수 있다
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;variable변수&quot;&gt;&lt;strong&gt;Variable(변수)&lt;/strong&gt;&lt;/h1&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//대입연산자 1은 상수&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//a는 변수 (변할 수 있다), 2는 상수 (항상 상, 언제나 2이다.)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;template-literals-문자를-표현&quot;&gt;&lt;strong&gt;Template literals (문자를 표현)&lt;/strong&gt;&lt;/h1&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;k8805&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;letter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`Dear &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
 
Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa egoing qui officia deserunt mollit anim id est laborum. &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;letter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;url&quot;&gt;&lt;strong&gt;URL&lt;/strong&gt;&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;http://opentutorials.org:3000/main?id=HTML&amp;amp;page=12&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;http--protocol통신규칙이라-한다-사용자가-서버에-접속할때-어떤방식으로-통신할-것인가에-대한-부분-웹브라우저-와-웹서버가-서로-데이터를-주고받기위한-통신규칙&quot;&gt;http : protocol통신규칙이라 한다. 사용자가 서버에 접속할때 어떤방식으로 통신할 것인가에 대한 부분 (웹브라우저 와 웹서버가 서로 데이터를 주고받기위한 통신규칙)&lt;br /&gt;&lt;br /&gt;&lt;/h5&gt;

&lt;h6 id=&quot;opentutorialsorg---host라한다domain이라고도-부른다-인터넷에-접속되어있는-각각의-컴퓨터를-칭한다-&quot;&gt;opentutorials.org :  host라한다(domain이라고도 부른다) 인터넷에 접속되어있는 각각의 컴퓨터를 칭한다. &lt;br /&gt;&lt;br /&gt;&lt;/h6&gt;
&lt;p&gt;3000 : 포트번호라 한다. 한대의 컴퓨터 안에 여러대의 서버가 있을 수 있다. 그러면 클라이언트가 접속했을 때 그중에 어떤 서버와 통신 할 지 애매 하다 
  그래서 접속할 때 접속할때 3000이라 하면 3000번 포트에 연결되어 있는 서버와 통신하게 된다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h6 id=&quot;80번-port는-전세계적으로-약속되어-있기에-http를-통해-접속했으면-웹서버에-접속한것이다-80을-생략한것이다&quot;&gt;80번 port는 전세계적으로 약속되어 있기에 http를 통해 접속했으면 웹서버에 접속한것이다. 80을 생략한것이다.&lt;br /&gt;&lt;br /&gt;&lt;/h6&gt;
&lt;p&gt;main : path라고 한다. 어떤파일인지 가르킨다.&lt;br /&gt;&lt;br /&gt;
id=HTML&amp;amp;page=12 : queryString 이라고 한다. 내가읽고 싶은 정보는 html 에 12페이지 이다  쿼리스트링의 시작은 ? 이며 값과 값은 &amp;amp; 쓰기로 약속 되어있고 값의 이름과 값은 =로 구분하기로 약속되어 있다.&lt;/p&gt;</content><author><name>동센</name></author><summary type="html">web browser 가 web server 한테 정보를 요청하면 web server 그정보를 찾아서 web browser에게 응답해준다.</summary></entry><entry><title type="html">[AWS] Elastic Ips &amp;amp; Scale Up</title><link href="http://localhost:4000/aws-elastic-ips/" rel="alternate" type="text/html" title="[AWS] Elastic Ips &amp; Scale Up" /><published>2020-04-17T00:00:00+09:00</published><updated>2020-04-17T00:00:00+09:00</updated><id>http://localhost:4000/aws-elastic-ips</id><content type="html" xml:base="http://localhost:4000/aws-elastic-ips/">&lt;h1 id=&quot;elastic-ips탄력적-ip-&quot;&gt;&lt;strong&gt;Elastic Ips(탄력적 IP)&lt;/strong&gt; &lt;br /&gt;&lt;/h1&gt;
&lt;p&gt;instances 를 다시 껏다가 키면 Public IP 가 달라진다. why? &lt;br /&gt;
ip의 고갈현상이랑 밀접한 관계가 있다. 00.000.00.000 부터 255.255.255.255 까지 IP가 존재할 수 있다 약 (40억개) &lt;br /&gt;
이세상에 40억개만 IP만 가질 수 있다. (40억대만 인터넷을 사용할 수 있다) 그래서 내가 쓰는 IP 를 컴퓨터를 킬때마다 배분해 준다. 끄면 가져가고. 항상 컴퓨터를 켜놓는 상태가 아니닌깐 그렇다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그러면 IP 가 계속 바뀌면 맨날 주소를 다르게 입력을 해야하는데 이럴경우 
Network &amp;amp; Security 탭에 있는 Elastic IP를 할당받으면 된다 (1개까지만 무료, 나머지는 유료)&lt;/p&gt;

&lt;h1 id=&quot;scale-up--서버그자체를-증강하는-것에-의해서-처리-능력을-향상-시키는-것이다&quot;&gt;&lt;strong&gt;Scale Up : 서버그자체를 증강하는 것에 의해서 처리 능력을 향상 시키는 것이다.&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;컴퓨터의 수요에 따라, 컴퓨팅 파워에 요구에 따라 더 좋은 컴퓨터로 업그레이드를 하는 것
인스턴스 교체&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;교체할려는 인스턴스를 이미지 화 한다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;type 을 정해야하는데 이미지 우클릭을 한뒤,  시작하기를 누른다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;6단계에서  http, ssh, https 까지 잘들어와있는지 확인 후 만든다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;Elastic Ips 에 연결시켜준다.&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;전에 했던 스트래스 테스트에 
microinstances 보다 largeinstances 가 훨씬 빨리 동시접속 을 처리해준다.(약2배)&lt;/p&gt;</content><author><name>동센</name></author><summary type="html">Elastic Ips(탄력적 IP) instances 를 다시 껏다가 키면 Public IP 가 달라진다. why? ip의 고갈현상이랑 밀접한 관계가 있다. 00.000.00.000 부터 255.255.255.255 까지 IP가 존재할 수 있다 약 (40억개) 이세상에 40억개만 IP만 가질 수 있다. (40억대만 인터넷을 사용할 수 있다) 그래서 내가 쓰는 IP 를 컴퓨터를 킬때마다 배분해 준다. 끄면 가져가고. 항상 컴퓨터를 켜놓는 상태가 아니닌깐 그렇다.</summary></entry><entry><title type="html">[nodejs]Mysql Module</title><link href="http://localhost:4000/nodejsmysql/" rel="alternate" type="text/html" title="[nodejs]Mysql Module" /><published>2020-04-15T00:00:00+09:00</published><updated>2020-04-15T00:00:00+09:00</updated><id>http://localhost:4000/nodejsmysql</id><content type="html" xml:base="http://localhost:4000/nodejsmysql/">&lt;p&gt;기본적으로 nodejs 모듈에는 mysql를 제어하는 모듈이 없다.
pm install -S mysql 을 해주면 packson(dependencies) 에 추가가된다.  소스코드를 나중에 복제하고 사용할때 편리하기 위해&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;topic&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//이런식으로 쓰면 사용자에게 공격을 당할 수 있다.&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;topic&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queryData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//id에 ? 에 두번쨰 인자가 치환되서 들어간다.보안성이좋음&lt;/span&gt;

 &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeHead&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;302&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;Location:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/?&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;insertId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//추가된 id 을 가져오는 방법 (바로 추가된 id로 리다이렉션이 됨)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>동센</name></author><summary type="html">기본적으로 nodejs 모듈에는 mysql를 제어하는 모듈이 없다. pm install -S mysql 을 해주면 packson(dependencies) 에 추가가된다. 소스코드를 나중에 복제하고 사용할때 편리하기 위해</summary></entry><entry><title type="html">[AWS]스트래스 테스트(ab test)</title><link href="http://localhost:4000/aws/" rel="alternate" type="text/html" title="[AWS]스트래스 테스트(ab test)" /><published>2020-04-14T00:00:00+09:00</published><updated>2020-04-14T00:00:00+09:00</updated><id>http://localhost:4000/aws</id><content type="html" xml:base="http://localhost:4000/aws/">&lt;p&gt;&lt;strong&gt;인스턴스 접속 : ssh -i 키위치/키이름.pem ubuntu@ip&lt;br /&gt;&lt;/strong&gt;
&lt;strong&gt;컴퓨터의 CPU 점유율 보기 : top &lt;br /&gt;&lt;/strong&gt;
ssh -i Desktop/dev/key/aws_password.pem ubuntu@54.180.2.171
&lt;strong&gt;sudo apt-get update : 컴퓨터에 프로그램 목록을 최신버전으로 업그레이드&lt;br /&gt;&lt;/strong&gt;
&lt;strong&gt;ab 프로그램 : 아파치에서 만든 부화발생기 (인스턴스 접속 후 ab 타이핑)&lt;br /&gt;&lt;/strong&gt;
&lt;strong&gt;requests  : 어떤 웹서버에 몇번의 접속을 시도하겠냐&lt;br /&gt;&lt;/strong&gt;
&lt;strong&gt;concurrency : 동시에 몇번의 접속을 시도하겠냐 &lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ex)concurrency 1 이고 requests 가 100 이면 접속한번하고 또접속한번하고 … 순차적으로 접속이됨&lt;br /&gt;
ex)concurrency 10 이고 requests가 100이면  한번에 10명이 접속하는 것과 똑같다&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h1 id=&quot;실험top-을-타이핑-해서-cpu-점유율-등-을-관찰-&quot;&gt;실험(top 을 타이핑 해서 cpu 점유율 등 을 관찰) &lt;br /&gt;&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;$ ab -n 400 -c 1 http:// ip주소/ &amp;lt;-끝에 슬래시를 꼭 붙여줘야한다. (400명의 사람이 동시접속1 (없다는 뜻))&lt;br /&gt;
요청 : 400&lt;br /&gt;
동시접속 : 1 &lt;br /&gt;
Time taken for tests(총소요시간):   9.641 seconds 약(9.641초)&lt;br /&gt;
Failed requests(실패):        0&lt;br /&gt;
Requests per second(초당처리속도):    41.49 [#/sec] &lt;br /&gt;
Time per request(개별초리속도(초)):       24.103 [ms]  ( 약 0.024초)&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;$ ab -n 400 -c 2 http:// ip주소/  (400명의 사람이 동시접속2)&lt;br /&gt;
요청 : 400&lt;br /&gt;
동시접속 : 2&lt;br /&gt;
Time taken for tests:   9.338 seconds&lt;br /&gt;
Failed requests:        0&lt;br /&gt;
Requests per second:    43.60 [#/sec] &lt;br /&gt;
Time per request:       46.688 [ms] &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;$ ab -n 400 -c 10 http:// ip주소/  (400명의 사람이 동시접속10)&lt;br /&gt;
요청 : 400&lt;br /&gt;
동시접속 : 10&lt;br /&gt;
Time taken for tests:   9.305 seconds&lt;br /&gt;
Failed requests:        0&lt;br /&gt;
Requests per second:    42.99 [#/sec] &lt;br /&gt;
Time per request:       232.628 [ms] &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;$ ab -n 400 -c 20 http:// ip주소/  (400명의 사람이 동시접속20)&lt;br /&gt;
요청 : 400&lt;br /&gt;
동시접속 : 10&lt;br /&gt;
Time taken for tests:   9.251 seconds&lt;br /&gt;
Failed requests:        0&lt;br /&gt;
Requests per second:    43.24 [#/sec] &lt;br /&gt;
Time per request:       462.548 [ms] &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;$ ab -n 400 -c 50 http:// ip주소/  (400명의 사람이 동시접속50)&lt;br /&gt;
요청 : 400&lt;br /&gt;
동시접속 : 10&lt;br /&gt;
Time taken for tests:   9.162 seconds&lt;br /&gt;
Failed requests:        0&lt;br /&gt;
Requests per second:    43.66 [#/sec] &lt;br /&gt;
Time per request:       1145.275 [ms] &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;$ ab -n 400 -c 100 http:// ip주소/  (400명의 사람이 동시접속100)&lt;br /&gt;
요청 : 400&lt;br /&gt;
동시접속 : 100&lt;br /&gt;
Time taken for tests:   9.120 seconds&lt;br /&gt;
Failed requests:        0&lt;br /&gt;
Requests per second:    43.86 [#/sec] &lt;br /&gt;
Time per request:       2279.948 [ms] &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;$ ab -n 400 -c 200 http:// ip주소/  (400명의 사람이 동시접속200)&lt;br /&gt;
요청 : 400&lt;br /&gt;
동시접속 : 200&lt;br /&gt;
Time taken for tests:   9.070 seconds&lt;br /&gt;
Failed requests:        0&lt;br /&gt;
Requests per second:    44.10 [#/sec] &lt;br /&gt;
Time per request:       4535.100 [ms]&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;동시접속이 많을 수록 사용자들은 느리게 접근하게 된다.&lt;/p&gt;</content><author><name>동센</name></author><summary type="html">인스턴스 접속 : ssh -i 키위치/키이름.pem ubuntu@ip 컴퓨터의 CPU 점유율 보기 : top ssh -i Desktop/dev/key/aws_password.pem ubuntu@54.180.2.171 sudo apt-get update : 컴퓨터에 프로그램 목록을 최신버전으로 업그레이드 ab 프로그램 : 아파치에서 만든 부화발생기 (인스턴스 접속 후 ab 타이핑) requests : 어떤 웹서버에 몇번의 접속을 시도하겠냐 concurrency : 동시에 몇번의 접속을 시도하겠냐</summary></entry><entry><title type="html">[nodejs]API &amp;amp; Mysql</title><link href="http://localhost:4000/nodejsapi/" rel="alternate" type="text/html" title="[nodejs]API &amp; Mysql" /><published>2020-04-10T00:00:00+09:00</published><updated>2020-04-10T00:00:00+09:00</updated><id>http://localhost:4000/nodejsapi</id><content type="html" xml:base="http://localhost:4000/nodejsapi/">&lt;p&gt;API : Application Programming interface &lt;br /&gt;
개발자와 함수를 사용하는 개발자 들의 약속된 조작장치&lt;/p&gt;</content><author><name>동센</name></author><summary type="html">API : Application Programming interface 개발자와 함수를 사용하는 개발자 들의 약속된 조작장치</summary></entry><entry><title type="html">[AWS]Scalability</title><link href="http://localhost:4000/awsscalability/" rel="alternate" type="text/html" title="[AWS]Scalability" /><published>2020-04-10T00:00:00+09:00</published><updated>2020-04-10T00:00:00+09:00</updated><id>http://localhost:4000/awsscalability</id><content type="html" xml:base="http://localhost:4000/awsscalability/">&lt;p&gt;변화하는 수요에 얼마나 탄력적으로 공급을 할 수 있는가? 클라우드 컴퓨팅&lt;/p&gt;

&lt;p&gt;Scale Up : 웹사이트를 운영하는데 접속자가 계속 많아지면 그 수요에 대해 어떻게 탄력적으로 어떻게 대응할 건지. (수요가 많으면 좋은 컴퓨터로 업그레이드)&lt;/p&gt;</content><author><name>동센</name></author><summary type="html">변화하는 수요에 얼마나 탄력적으로 공급을 할 수 있는가? 클라우드 컴퓨팅</summary></entry><entry><title type="html">[AWS]AMI &amp;amp; WordPress 설치</title><link href="http://localhost:4000/awsami/" rel="alternate" type="text/html" title="[AWS]AMI &amp; WordPress 설치" /><published>2020-04-09T00:00:00+09:00</published><updated>2020-04-09T00:00:00+09:00</updated><id>http://localhost:4000/awsami</id><content type="html" xml:base="http://localhost:4000/awsami/">&lt;blockquote&gt;
  &lt;p&gt;Amazon machine image : 컴퓨터가 갖고 있는 상태를 그대로 얼려서 나중에 똑같이 복원하는 데이터 (그컴퓨터에 운영체제 ,소프트웨어 설정 ,현재 사용중인 프로그램 등등)
백업 기능이라 생각하면 된다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Wordpress : 가상머신의 형태로 제공된 솔루션을 사고 팔 수 있는 공간이라고 보면 된다.(다른사람이 만든 인스턴스를 사용하는 것)&lt;/p&gt;
&lt;h1 id=&quot;wordpress-설치방법&quot;&gt;wordpress 설치방법&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;aws markplace 에서 wordpresss 를 찾아 설치하고 인스턴스를 생성하면 된다.&lt;/li&gt;
  &lt;li&gt;새로만든 인스턴스 도메인을 들어가보고 제대로 생성이 되었는지 확인한다.
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;instance로그인-방법&quot;&gt;Instance로그인 방법&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;key 가있는 폴더로 이동한다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;터미널을 켜서  ssh 를 넣어 로그인하면 된다.(인스턴스 우클릭 &amp;gt; 연결 &amp;gt; ssh -i 로 시작한다.)&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;로그인을 해보면 비트남이라고 나온다. (비트남 회사 wordpress라서)&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;application-로그인-방법&quot;&gt;Application 로그인 방법&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;관리자 권한으로 들어가고 싶으면 도메인 뒤에 /admin-wp/ 를 타이핑 해서 들어간다&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;로그인 화면이 나오는데 id 는 user , 비밀번호는 EC2 에 들어가서 생성한 인스턴스 우클릭&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;인스턴스설정 &amp;gt;  시스템로그 가져오기 &amp;gt; 하단쯤에   Setting Bitnami application password 라 써져있다 ‘ ‘ 안에있는 걸 넣으면 로그인이 된다.&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;database-로그인-하는방법&quot;&gt;Database 로그인 하는방법&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;터미널을 켜서 해당 인스턴스로 로그인을 한다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;mysql -uroot -p 를 입력&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;show databases; 를 입력하면 현재 제공하는 데이터베이스를 볼 수 있다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;use bitnami_wordpress 를 타이핑&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;show tables; 를 타이핑 해보면 wordpress 에서 제공하는 데이터베이스를 볼 수 있다.&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>동센</name></author><summary type="html">Amazon machine image : 컴퓨터가 갖고 있는 상태를 그대로 얼려서 나중에 똑같이 복원하는 데이터 (그컴퓨터에 운영체제 ,소프트웨어 설정 ,현재 사용중인 프로그램 등등) 백업 기능이라 생각하면 된다</summary></entry></feed>