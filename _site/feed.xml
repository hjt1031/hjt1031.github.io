<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-04-03T10:03:24+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">juntae</title><subtitle>JavaScript And Node.js</subtitle><author><name>동센</name></author><entry><title type="html">[AWS]</title><link href="http://localhost:4000/aws/" rel="alternate" type="text/html" title="[AWS]" /><published>2020-04-03T00:00:00+09:00</published><updated>2020-04-03T00:00:00+09:00</updated><id>http://localhost:4000/aws</id><content type="html" xml:base="http://localhost:4000/aws/">&lt;p&gt;&lt;strong&gt;EC2&lt;/strong&gt; : Elastic Compute Cloud, 아마존 웹 서비스 중 대표적인 상품&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;Instance&lt;/strong&gt; : Instance 한개당 한대의 컴퓨터라 생각하면 된다&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;온디맨드 인스턴스&lt;/strong&gt; : 필요할때 키고 필요없을땐 끊다. 우리가 컴퓨터를 필요할 때마다 켜고 끄고 할 수 있는 인스턴스를 의미&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;예약 인스턴스&lt;/strong&gt; : 서버를 키는데 365일 동안 끄지 않는 경우면 예약 인스턴스를 사용하는게 훨씬 저렴하다. (3년치를 한꺼번에 사면 더 저렴하게 구매할 수 있다.)&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;스팟 인스턴스&lt;/strong&gt; : 노는 컴퓨터를 많을 수록 많을 수록 저렴하다. 반대로 노는 컴퓨터가 없으면 일반 인스턴스 보다 더 가격이 많이 측정된다. 주로 데이터 분석, 백그라운드 작업, 배치 작업에 적합(가변적인 가격 정책을 갖고 있다.)&lt;/p&gt;</content><author><name>동센</name></author><summary type="html">EC2 : Elastic Compute Cloud, 아마존 웹 서비스 중 대표적인 상품 Instance : Instance 한개당 한대의 컴퓨터라 생각하면 된다 온디맨드 인스턴스 : 필요할때 키고 필요없을땐 끊다. 우리가 컴퓨터를 필요할 때마다 켜고 끄고 할 수 있는 인스턴스를 의미 예약 인스턴스 : 서버를 키는데 365일 동안 끄지 않는 경우면 예약 인스턴스를 사용하는게 훨씬 저렴하다. (3년치를 한꺼번에 사면 더 저렴하게 구매할 수 있다.) 스팟 인스턴스 : 노는 컴퓨터를 많을 수록 많을 수록 저렴하다. 반대로 노는 컴퓨터가 없으면 일반 인스턴스 보다 더 가격이 많이 측정된다. 주로 데이터 분석, 백그라운드 작업, 배치 작업에 적합(가변적인 가격 정책을 갖고 있다.)</summary></entry><entry><title type="html">[nodejs] 파일생성, 리다이렉션, 파일삭제</title><link href="http://localhost:4000/nodejs/" rel="alternate" type="text/html" title="[nodejs] 파일생성, 리다이렉션, 파일삭제" /><published>2020-04-02T00:00:00+09:00</published><updated>2020-04-02T00:00:00+09:00</updated><id>http://localhost:4000/nodejs</id><content type="html" xml:base="http://localhost:4000/nodejs/">&lt;p&gt;&lt;strong&gt;파일생성과 리다이렉션&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;리다이렉션 : 출력의 방향을 바꾼다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;response.writeHead(302, {Location : 'http://whateverhostthiswillbe:8675/' +newRoom});
response.end();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;writeHead(200) 은 성공시켰다.
writeHead(302) 페이지를 다른데로 리다이렉션 시킨다.&lt;/p&gt;

&lt;p&gt;ex)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fs.writeFile(`data/${title}`, description, 'utf8', function(err){
            response.writeHead(302, {Location: `/?id=${title}`});
            response.end();
          })
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;fs.unlink(path, callback) =&amp;gt; 파일삭제&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ex)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fs.unlink(`data/${id}`, function(error){
            response.writeHead(302, {Location: `/`});
            response.end();
          })
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;삭제가 되고 홈으로 이동한다.&lt;/p&gt;

&lt;h1 id=&quot;get-방식&quot;&gt;&lt;em&gt;Get 방식&lt;/em&gt;&lt;/h1&gt;
&lt;p&gt;QueryString 이 있는 것&lt;/p&gt;</content><author><name>동센</name></author><summary type="html">파일생성과 리다이렉션 리다이렉션 : 출력의 방향을 바꾼다.</summary></entry></feed>